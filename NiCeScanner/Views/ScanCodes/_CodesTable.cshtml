@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@model PaginatedList<NiCeScanner.Models.ScanCode>

<table id="questionTable" class="table mb-2">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-searchString="@ViewData["SearchString"]"
                   asp-route-sortOrderCode="@ViewData["CodeParam"]"
                   asp-route-sortOrderContactName="@ViewData["SortOrderContactName"]"
                   asp-route-sortOrderContactEmail="@ViewData["SortOrderContactEmail"]"
                   asp-route-sortOrderCanEdit="@ViewData["SortOrderCanEdit"]"
                >
                    Code
                    @if (ViewData["SortOrderCode"] != null && ViewData["SortOrderCode"].ToString() == "Code_desc")
                    {
                    <span>&darr;</span>
                    }
                    else if (ViewData["SortOrderCode"] != null && ViewData["SortOrderCode"].ToString() == "Code")
                    {
                    <span>&uarr;</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-searchString="@ViewData["SearchString"]"
                   asp-route-sortOrderCode="@ViewData["SortOrderCode"]"
                   asp-route-sortOrderContactName="@ViewData["ContactNameParam"]"
                   asp-route-sortOrderContactEmail="@ViewData["SortOrderContactEmail"]"
                   asp-route-sortOrderCanEdit="@ViewData["SortOrderCanEdit"]"
                >
                    Contact name
                    @if (ViewData["SortOrderContactName"] != null && ViewData["SortOrderContactName"].ToString() == "ContactName_desc")
                    {
                    <span>&darr;</span>
                    }
                    else if (ViewData["SortOrderContactName"] != null && ViewData["SortOrderContactName"].ToString() == "ContactName")
                    {
                    <span>&uarr;</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-searchString="@ViewData["SearchString"]"
                   asp-route-sortOrderCode="@ViewData["SortOrderCode"]"
                   asp-route-sortOrderContactName="@ViewData["SortOrderContactName"]"
                   asp-route-sortOrderContactEmail="@ViewData["ContactEmailParam"]"
                   asp-route-sortOrderCanEdit="@ViewData["SortOrderCanEdit"]"
                >
                    Contact email
                    @if (ViewData["SortOrderContactEmail"] != null && ViewData["SortOrderContactEmail"].ToString() == "ContactEmail_desc")
                    {
                    <span>&darr;</span>
                    }
                    else if (ViewData["SortOrderContactEmail"] != null && ViewData["SortOrderContactEmail"].ToString() == "ContactEmail")
                    {
                    <span>&uarr;</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-searchString="@ViewData["SearchString"]"
                   asp-route-sortOrderCode="@ViewData["SortOrderCode"]"
                   asp-route-sortOrderContactName="@ViewData["SortOrderContactName"]"
                   asp-route-sortOrderContactEmail="@ViewData["SortOrderContactEmail"]"
                   asp-route-sortOrderCanEdit="@ViewData["CanEditParam"]"
                >
                    Provides edit access
                    @if (ViewData["SortOrderCanEdit"] != null && ViewData["SortOrderCanEdit"].ToString() == "CanEdit_desc")
                    {
                    <span>&darr;</span>
                    }
                    else if (ViewData["SortOrderCanEdit"] != null && ViewData["SortOrderCanEdit"].ToString() == "CanEdit")
                    {
                    <span>&uarr;</span>
                    }
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Scan.ContactName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Scan.ContactEmail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CanEdit)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div>
    <nav aria-label="Page navigation">
        <ul class="pagination mb-2">
            <li class="page-item @prevDisabled">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Previous</a>
            </li>
            <li class="page-item @(1 == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="1"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">1</a>
            </li>
            @for (int i = Math.Max(1, Model.PageIndex - 2); i <= Math.Min(Model.TotalPages, Model.PageIndex + 2); i++)
            {
                if (i > 1 && i < Model.TotalPages)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@i"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                    </li>
                }
            }
            <li class="page-item @(Model.TotalPages == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@Model.TotalPages"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">@Model.TotalPages</a>
            </li>
            <li class="page-item @nextDisabled">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Next</a>
            </li>
        </ul>
    </nav>
</div>