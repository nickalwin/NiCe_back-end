@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@model NiCeScanner.Models.Scan

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Scan</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Uuid)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Uuid)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ContactName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ContactName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ContactEmail)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ContactEmail)
        </dd>
        @{
            var results = JsonConvert.DeserializeObject<JArray>(Model.Results);
            if (results == null) return;
            foreach (var result in results)
            {
                var categoryData = JsonConvert.DeserializeObject<JObject>(result["category_data"].ToString());
                var categoryText = categoryData?["nl"]?.Value<string>("name") ?? "N/A";
                var mean = result["mean"]?.Value<double>() ?? 0.0;
                <dt class="col-sm-2">
                    @categoryText (mean)
                </dt>
                <dd class="col-sm-10">
                    @mean
                </dd>
            }
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedAt)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UpdatedAt)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Sector)
        </dt>
        @{
            var sectorData = JsonConvert.DeserializeObject<JObject>(Model.Sector.Data);
            var sectorText = sectorData?["nl"]?.Value<string>("name") ?? "N/A";
        }
        <dd class="col-sm-10">
            @sectorText
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<br />
<h3>Score Information</h3>
<h4>Rating 1-5 (1 = lowest, 5 = highest)</h4>
<h4>Rating 0 (Not Applicable)</h4>
<h4>Rating -1 (I Don't Know)</h4>
<h4>Rating -2 (No answer)</h4>
<br />

<div>
    @foreach(var category in Model.Answers.Select(a => a.Question.Category).Distinct())
    {
        if(category.Questions.Count == 0) continue;

        var categoryData = JsonConvert.DeserializeObject<JObject>(category.Data);
        var categoryText = categoryData?["nl"]?.Value<string>("name") ?? "N/A";

        <h4>@categoryText</h4>
        <hr />
        <table class="table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Question</th>
                    <th>Score</th>
                    <th>Comment</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var answer in Model.Answers)
                {
                    if (answer.Question.CategoryId == category.Id)
                    {
                        var jsonData = JsonConvert.DeserializeObject<dynamic>(answer.Question.Data);
                        var questionText = jsonData.nl.question;
                        <tr>
                            <td>@answer.Id</td>
                        <td>@questionText</td>
                        <td>
                            @if (answer.Score == 0)
                            {
                                <span>Not Applicable</span>
                            }
                            else if (answer.Score == -1)
                            {
                                <span>I Don't Know</span>
                            }
                            else if (answer.Score == -2)
                            {
                                <span>No answer</span>
                            }
                            else
                            {
                                <span>@answer.Score</span>
                            }
                        <td>@answer.Comment</td>
                    </tr>
                    }
                }
            </tbody>
        </table>
    }
</div>
