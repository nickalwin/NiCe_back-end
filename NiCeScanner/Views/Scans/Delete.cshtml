@model NiCeScanner.Models.Scan
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Scan</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Uuid)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Uuid)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ContactName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ContactName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ContactEmail)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ContactEmail)
        </dd>
        @{
            var results = JsonConvert.DeserializeObject<JArray>(Model.Results);
            if (results == null) return;
            foreach (var result in results)
            {
                var categoryData = JsonConvert.DeserializeObject<JObject>(result["category_data"].ToString());
                var categoryText = categoryData?["nl"]?.Value<string>("name") ?? "N/A";
                var mean = result["mean"]?.Value<double>() ?? 0.0;
                <dt class="col-sm-2">
                    @categoryText (mean)
                </dt>
                <dd class="col-sm-10">
                    @mean
                </dd>
            }
        }
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedAt)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UpdatedAt)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Sector)
        </dt>
        @{
            var sectorData = JsonConvert.DeserializeObject<JObject>(Model.Sector.Data);
            var sectorText = sectorData?["nl"]?.Value<string>("name") ?? "N/A";
        }
        <dd class="col-sm-10">
            @sectorText
        </dd>
    </dl>
    
    <form asp-action="Delete">
        <input type="hidden" asp-for="Id" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
