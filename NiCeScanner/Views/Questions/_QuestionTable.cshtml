@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@model PaginatedList<NiCeScanner.Models.Question>

    <table id="questionTable" class="table mb-2">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrderQuestion="@ViewData["QuestionIDSortParm"]"
                   asp-route-sortOrderWeight="@ViewData["SortOrderWeight"]"
                   asp-route-sortOrderCategory="@ViewData["SortOrderCategory"]"
                   asp-route-sortOrderShow="@ViewData["SortOrderShow"]"
                   asp-route-sortOrderStatement="@ViewData["SortOrderStatement"]"
                   asp-route-searchString="@ViewData["SearchString"]"
                >
                    Question
                    @if (ViewData["SortOrderQuestion"] != null && ViewData["SortOrderQuestion"].ToString() == "QuestionID_desc")
                    {
                    <span>&darr;</span>
                    }
                    else if (ViewData["SortOrderQuestion"] != null && ViewData["SortOrderQuestion"].ToString() == "QuestionID")
                    {
                    <span>&uarr;</span>
                    }    
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrderQuestion="@ViewData["SortOrderQuestion"]"
                   asp-route-sortOrderWeight="@ViewData["WeightSortParm"]"
                   asp-route-sortOrderCategory="@ViewData["SortOrderCategory"]"
                   asp-route-sortOrderShow="@ViewData["SortOrderShow"]"
                   asp-route-sortOrderStatement="@ViewData["SortOrderStatement"]"
                   asp-route-searchString="@ViewData["SearchString"]"
                >
                    Weight
                    @if (ViewData["SortOrderWeight"] != null && ViewData["SortOrderWeight"].ToString() == "Weight_desc")
                    {
                    <span>&darr;</span>
                    }
                    else if (ViewData["SortOrderWeight"] != null && ViewData["SortOrderWeight"].ToString() == "Weight")
                    {
                    <span>&uarr;</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrderQuestion="@ViewData["SortOrderQuestion"]"
                   asp-route-sortOrderWeight="@ViewData["SortOrderWeight"]"
                   asp-route-sortOrderCategory="@ViewData["SortOrderCategory"]"
                   asp-route-sortOrderShow="@ViewData["SortOrderShow"]"
                   asp-route-sortOrderStatement="@ViewData["StatementSortParm"]"
                   asp-route-searchString="@ViewData["SearchString"]"
                >
                    Statement
                    @if (ViewData["SortOrderStatement"] != null && ViewData["SortOrderStatement"].ToString() == "Statement_desc")
                    {
                    <span>&darr;</span>
                    }
                    else if (ViewData["SortOrderStatement"] != null && ViewData["SortOrderStatement"].ToString() == "Statement")
                    {
                    <span>&uarr;</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrderQuestion="@ViewData["SortOrderQuestion"]"
                   asp-route-sortOrderWeight="@ViewData["SortOrderWeight"]"
                   asp-route-sortOrderCategory="@ViewData["SortOrderCategory"]"
                   asp-route-sortOrderShow="@ViewData["ShowSortParm"]"
                   asp-route-sortOrderStatement="@ViewData["SortOrderStatement"]"
                   asp-route-searchString="@ViewData["SearchString"]"
                >
                    Show
                    @if (ViewData["SortOrderShow"] != null && ViewData["SortOrderShow"].ToString() == "Show_desc")
                    {
                    <span>&darr;</span>
                    }
                    else if (ViewData["SortOrderShow"] != null && ViewData["SortOrderShow"].ToString() == "Show")
                    {
                    <span>&uarr;</span>
                    }
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrderQuestion="@ViewData["SortOrderQuestion"]"
                   asp-route-sortOrderWeight="@ViewData["SortOrderWeight"]"
                   asp-route-sortOrderCategory="@ViewData["CategorySortParm"]"
                   asp-route-sortOrderShow="@ViewData["SortOrderShow"]"
                   asp-route-sortOrderStatement="@ViewData["SortOrderStatement"]"
                   asp-route-searchString="@ViewData["SearchString"]"
                >
                    Category
                    @if (ViewData["SortOrderCategory"] != null && ViewData["SortOrderCategory"].ToString() == "category_desc")
                    {
                    <span>&darr;</span>
                    }
                    else if (ViewData["SortOrderCategory"] != null && ViewData["SortOrderCategory"].ToString() == "category")
                    {
                    <span>&uarr;</span>
                    }
                </a>
            </th>
            <th></th>
        </tr>
    </thead>

        <tbody id="questionTableBody">
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    var jsonData = JsonConvert.DeserializeObject<JObject>(item.Data);
                    var questionText = jsonData?["nl"]?.Value<string>("question") ?? "N/A";
                    jsonData = JsonConvert.DeserializeObject<JObject>(item.Category.Data);
                    var categoryText = jsonData?["nl"]?.Value<string>("name") ?? "N/A";

                    <tr>
                        <td>@Html.DisplayFor(modelItem => questionText)</td>
                        <td>@Html.DisplayFor(modelItem => item.Weight)</td>
                        <td>@Html.DisplayFor(modelItem => item.Statement)</td>
                        <td>@Html.DisplayFor(modelItem => item.Show)</td>
                        <td>@Html.DisplayFor(modelItem => categoryText)</td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="6">No data found</td></tr>
            }
        </tbody>
    </table>


    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

<div>
    <nav aria-label="Page navigation">
        <ul class="pagination mb-2">
            <li class="page-item @prevDisabled">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Previous</a>
            </li>
            <li class="page-item @(1 == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="1"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">1</a>
            </li>
            @for (int i = Math.Max(1, Model.PageIndex - 2); i <= Math.Min(Model.TotalPages, Model.PageIndex + 2); i++)
            {
                if (i > 1 && i < Model.TotalPages)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-pageNumber="@i"
                           asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                    </li>
                }
            }
            <li class="page-item @(Model.TotalPages == Model.PageIndex ? "active" : "")">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@Model.TotalPages"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">@Model.TotalPages</a>
            </li>
            <li class="page-item @nextDisabled">
                <a class="page-link" asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]">Next</a>
            </li>
        </ul>
    </nav>
</div>